{"version":3,"sources":["components/Header.jsx","components/Sidebar.jsx","components/Tasks.jsx","components/Content.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Header","className","Sidebar","selectedTab","setselectedTab","onClick","FORMAT","formatDate","date","format","locale","dateFnsFormat","AddTask","onCancel","onAddTask","useState","task","setTask","setDate","value","onChange","event","target","disabled","onDayChange","day","placeholder","Date","dayPickerProps","modifiers","before","TASKS_HEADER_MAPPING","INBOX","TODAY","NEXT_7","TaskItems","tasks","tasksToRender","filter","isAfter","isBefore","addDays","isToday","map","text","Tasks","showAddTask","setShowAddTask","setTasks","prevState","newTaskItem","length","Content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad5d5830.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className = \"header\">\r\n           <nav>\r\n               \r\n                   <h1 className=\"heading\">To-Do List</h1>\r\n               \r\n           </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport  default Header;\r\n","import React from 'react'\r\nimport {FaInbox,FaRegCalendarAlt,FaRegCalendar} from 'react-icons/fa';\r\n\r\n const Sidebar = ({selectedTab,setselectedTab}) => {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className={selectedTab ==='INBOX' ? 'active':\" \"} onClick = {()=>setselectedTab(\"INBOX\")}>\r\n                <FaInbox className=\"icon\" />\r\n                  Inbox\r\n            </div>\r\n            <div className={selectedTab ==='TODAY' ? 'active':\" \"} \r\n             onClick = {()=>setselectedTab(\"TODAY\")}>\r\n           < FaRegCalendarAlt className=\"icon\" />\r\n                Today\r\n            </div>\r\n            <div className={selectedTab ==='NEXT 7' ? 'active':\" \"} \r\n            onClick = {()=>setselectedTab(\"NEXT_7\")}>\r\n           < FaRegCalendar  className=\"icon\"/>\r\n                Last 7 days\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React , {useState} from 'react';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport \"react-day-picker/lib/style.css\";\r\nimport dateFnsFormat from 'date-fns/format';\r\nimport isAfter from 'date-fns/isAfter';\r\nimport isBefore from 'date-fns/isBefore';\r\nimport addDays from 'date-fns/addDays';\r\nimport isToday from 'date-fns/isToday';\r\n\r\n\r\nconst FORMAT = \"dd/MM/yyyy\";\r\nfunction formatDate(date ,format , locale){\r\n    return dateFnsFormat(date, format,{locale});\r\n}\r\n\r\nconst AddTask = ({onCancel , onAddTask}) =>{\r\n    const [task,setTask] = useState('');\r\n    const [date,setDate] = useState(null);\r\n    return(\r\n    <div className=\"add-task-dialog\">\r\n\r\n    <input value = {task} onChange = {(event) => setTask(event.target.value)} />\r\n\r\n    <div className=\"add-task-actions-container\">\r\n\r\n        <div className=\"btns-container\">\r\n        <button className=\"add-btn\" disabled ={!task} onClick={() => {onAddTask(task , date);onCancel();setTask(\"\")}}> Add Task</button>\r\n        <button className=\"cancel-btn\" onClick = {() => {onCancel();setTask(\"\")}}>Cancel </button>\r\n        </div>\r\n\r\n        <div className=\"icon-container\">\r\n            <DayPickerInput onDayChange ={(day) => setDate(day)} placeholder = {`${dateFnsFormat(new Date(),FORMAT)}`}\r\n            formatDate ={formatDate}\r\n            format = {FORMAT}\r\n            dayPickerProps ={{modifiers:{disabled:[{before:new Date()}],},}} />\r\n            \r\n        </div> \r\n    </div>\r\n</div>\r\n    )\r\n}\r\n\r\nconst TASKS_HEADER_MAPPING = {\r\n    INBOX: \"Inbox\",\r\n    TODAY:'Today',\r\n    NEXT_7 :'Next 7 days'\r\n}\r\n\r\nconst TaskItems = ({selectedTab , tasks}) => {\r\n    let tasksToRender = [...tasks];\r\n    if(selectedTab === 'NEXT_7'){\r\n       tasksToRender = tasksToRender.filter((task)=>isAfter(task.date, new Date())&& isBefore(task.date ,addDays(new Date(), 7)));\r\n    }\r\n    if(selectedTab ==='TODAY'){\r\n       tasksToRender = tasksToRender.filter((task)=>isToday(task.date));\r\n\r\n    }\r\n    return (\r\n        <div className =\"task-item-container\">\r\n\r\n            { tasksToRender.map((task) =>  (\r\n            <div className=\"task-item\">\r\n                <p>{task.text}</p>\r\n            <p> {dateFnsFormat(new Date(task.date),FORMAT)}</p>\r\n            </div>\r\n            ))}\r\n        </div>\r\n    )\r\n    \r\n\r\n}\r\n const Tasks = ({selectedTab}) => {\r\n    const[showAddTask , setShowAddTask] = useState(false);\r\n    const [tasks,setTasks] = useState([]);\r\n\r\n    const addNewTask =(text , date) =>{\r\n     const newTaskItem = {text,date: date || new Date()}\r\n      setTasks((prevState) => [...prevState , newTaskItem])\r\n    }\r\n\r\n    return (\r\n        <div className=\"tasks\">\r\n            <h1>{TASKS_HEADER_MAPPING[selectedTab]}</h1>\r\n\r\n   {selectedTab === \"INBOX\" ?<div className=\"add-task-btn\" \r\n        onClick ={() => setShowAddTask((prevState) => !prevState)}>\r\n        <span className=\"plus\">+</span>\r\n        <span className =\"add-task-text\">Add Text</span>\r\n    </div>:null}\r\n\r\n            {showAddTask && (<AddTask onAddTask ={addNewTask} onCancel = {()=> setShowAddTask(false)}/>)}\r\n\r\n            {tasks.length > 0 ? <TaskItems  tasks = {tasks} selectedTab = {selectedTab} /> : <p>No tasks yet</p>}\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks;","import React, {useState} from 'react'\r\nimport Sidebar from './Sidebar';\r\nimport Tasks from './Tasks'\r\n\r\nconst Content = () => {\r\n    const [selectedTab,setselectedTab] = useState(\"INBOX\");\r\n    return (\r\n        <section className=\"content\">\r\n        <Sidebar  selectedTab={selectedTab} setselectedTab={setselectedTab}/>\r\n        <Tasks selectedTab={selectedTab}  />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Content from './components/Content'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}